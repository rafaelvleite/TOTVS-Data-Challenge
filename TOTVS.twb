<?xml version='1.0' encoding='utf-8' ?>

<!-- build 10200.17.0216.1925                               -->
<workbook source-build='10.2.0 (10200.17.0216.1925)' source-platform='mac' version='10.2' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='sample 2' inline='true' name='federated.1308qto18dp5dc1ad09b307x0060' version='10.2'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='sample 2' name='semistructpassivestore-direct.0x6mlzq1ncusap193v3p20ctxmi5'>
            <connection class='semistructpassivestore-direct' directory='/Users/rafaelleite/Desktop/Desafio TOTVS/tableau' filename='sample 2.json' password='' server=''>
              <semistruct-schemas>
                <semistruct-schema table='[sample 2.json+]'>
                  <map key='complemento' value='true' />
                  <map key='dets' value='true' />
                  <map key='dets.Valor' value='true' />
                  <map key='dets.Valor.prod' value='true' />
                  <map key='emit' value='true' />
                  <map key='emit.enderEmit' value='true' />
                  <map key='ide' value='true' />
                  <map key='ide.dhEmi' value='true' />
                  <map key='infAdic' value='true' />
                  <map key='total' value='true' />
                  <map key='total.icmsTot' value='true' />
                  <map key='{root}' value='true' />
                </semistruct-schema>
                <semistruct-schema table='[sample 2.json]'>
                  <map key='complemento' value='true' />
                  <map key='dets' value='true' />
                  <map key='dets.Valor' value='true' />
                  <map key='dets.Valor.prod' value='true' />
                  <map key='emit' value='true' />
                  <map key='emit.enderEmit' value='true' />
                  <map key='ide' value='true' />
                  <map key='ide.dhEmi' value='true' />
                  <map key='infAdic' value='true' />
                  <map key='total' value='true' />
                  <map key='total.icmsTot' value='true' />
                  <map key='{root}' value='true' />
                </semistruct-schema>
              </semistruct-schemas>
            </connection>
          </named-connection>
        </named-connections>
        <relation all='true' name='sample 2.json+' type='union'>
          <columns>
            <column datatype='string' name='Table Name' />
            <column datatype='integer' name='Índice do documento (gerado)' />
            <column datatype='real' name='complemento.valorTotal' />
            <column datatype='integer' name='dets.Índice (gerado)' />
            <column datatype='string' name='dets.Valor.nItem' />
            <column datatype='string' name='dets.Valor.prod.indTot' />
            <column datatype='real' name='dets.Valor.prod.qCom' />
            <column datatype='string' name='dets.Valor.prod.uCom' />
            <column datatype='real' name='dets.Valor.prod.vProd' />
            <column datatype='real' name='dets.Valor.prod.vUnCom' />
            <column datatype='string' name='dets.Valor.prod.xProd' />
            <column datatype='string' name='emit.cnpj' />
            <column datatype='string' name='emit.enderEmit.fone' />
            <column datatype='string' name='emit.enderEmit.uf' />
            <column datatype='string' name='emit.enderEmit.xBairro' />
            <column datatype='string' name='emit.enderEmit.xLgr' />
            <column datatype='string' name='emit.enderEmit.xMun' />
            <column datatype='string' name='emit.enderEmit.xPais' />
            <column datatype='string' name='emit.xFant' />
            <column datatype='string' name='ide.dhEmi.$date' />
            <column datatype='string' name='ide.natOp' />
            <column datatype='string' name='infAdic.infCpl' />
            <column datatype='real' name='total.icmsTot.vDesc' />
            <column datatype='real' name='total.icmsTot.vFrete' />
            <column datatype='real' name='total.icmsTot.vOutro' />
            <column datatype='real' name='total.icmsTot.vProd' />
            <column datatype='real' name='total.icmsTot.vSeg' />
            <column datatype='real' name='total.icmsTot.vTotTrib' />
            <column datatype='real' name='total.icmsTot.vbc' />
            <column datatype='real' name='total.icmsTot.vbcst' />
            <column datatype='real' name='total.icmsTot.vcofins' />
            <column datatype='real' name='total.icmsTot.vicms' />
            <column datatype='real' name='total.icmsTot.vicmsDeson' />
            <column datatype='real' name='total.icmsTot.vii' />
            <column datatype='real' name='total.icmsTot.vipi' />
            <column datatype='real' name='total.icmsTot.vnf' />
            <column datatype='real' name='total.icmsTot.vpis' />
            <column datatype='real' name='total.icmsTot.vst' />
            <column datatype='real' name='versaoDocumento' />
          </columns>
          <relation connection='semistructpassivestore-direct.0x6mlzq1ncusap193v3p20ctxmi5' name='sample 2.json' table='[sample 2.json]' type='table' />
        </relation>
        <cols>
          <map key='[$date]' value='[sample 2.json+].[ide.dhEmi.$date]' />
          <map key='[Table Name]' value='[sample 2.json+].[Table Name]' />
          <map key='[cnpj]' value='[sample 2.json+].[emit.cnpj]' />
          <map key='[dets Índice (gerado)]' value='[sample 2.json+].[dets.Índice (gerado)]' />
          <map key='[fone]' value='[sample 2.json+].[emit.enderEmit.fone]' />
          <map key='[indTot]' value='[sample 2.json+].[dets.Valor.prod.indTot]' />
          <map key='[infCpl]' value='[sample 2.json+].[infAdic.infCpl]' />
          <map key='[nItem]' value='[sample 2.json+].[dets.Valor.nItem]' />
          <map key='[natOp]' value='[sample 2.json+].[ide.natOp]' />
          <map key='[qCom]' value='[sample 2.json+].[dets.Valor.prod.qCom]' />
          <map key='[uCom]' value='[sample 2.json+].[dets.Valor.prod.uCom]' />
          <map key='[uf]' value='[sample 2.json+].[emit.enderEmit.uf]' />
          <map key='[vDesc]' value='[sample 2.json+].[total.icmsTot.vDesc]' />
          <map key='[vFrete]' value='[sample 2.json+].[total.icmsTot.vFrete]' />
          <map key='[vOutro]' value='[sample 2.json+].[total.icmsTot.vOutro]' />
          <map key='[vProd (dets.prod)]' value='[sample 2.json+].[dets.Valor.prod.vProd]' />
          <map key='[vProd (total.icmsTot)]' value='[sample 2.json+].[total.icmsTot.vProd]' />
          <map key='[vSeg]' value='[sample 2.json+].[total.icmsTot.vSeg]' />
          <map key='[vTotTrib]' value='[sample 2.json+].[total.icmsTot.vTotTrib]' />
          <map key='[vUnCom]' value='[sample 2.json+].[dets.Valor.prod.vUnCom]' />
          <map key='[valorTotal]' value='[sample 2.json+].[complemento.valorTotal]' />
          <map key='[vbc]' value='[sample 2.json+].[total.icmsTot.vbc]' />
          <map key='[vbcst]' value='[sample 2.json+].[total.icmsTot.vbcst]' />
          <map key='[vcofins]' value='[sample 2.json+].[total.icmsTot.vcofins]' />
          <map key='[versaoDocumento]' value='[sample 2.json+].[versaoDocumento]' />
          <map key='[vicmsDeson]' value='[sample 2.json+].[total.icmsTot.vicmsDeson]' />
          <map key='[vicms]' value='[sample 2.json+].[total.icmsTot.vicms]' />
          <map key='[vii]' value='[sample 2.json+].[total.icmsTot.vii]' />
          <map key='[vipi]' value='[sample 2.json+].[total.icmsTot.vipi]' />
          <map key='[vnf]' value='[sample 2.json+].[total.icmsTot.vnf]' />
          <map key='[vpis]' value='[sample 2.json+].[total.icmsTot.vpis]' />
          <map key='[vst]' value='[sample 2.json+].[total.icmsTot.vst]' />
          <map key='[xBairro]' value='[sample 2.json+].[emit.enderEmit.xBairro]' />
          <map key='[xFant]' value='[sample 2.json+].[emit.xFant]' />
          <map key='[xLgr]' value='[sample 2.json+].[emit.enderEmit.xLgr]' />
          <map key='[xMun]' value='[sample 2.json+].[emit.enderEmit.xMun]' />
          <map key='[xPais]' value='[sample 2.json+].[emit.enderEmit.xPais]' />
          <map key='[xProd]' value='[sample 2.json+].[dets.Valor.prod.xProd]' />
          <map key='[Índice do documento (gerado)]' value='[sample 2.json+].[Índice do documento (gerado)]' />
        </cols>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Table Name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Table Name]</local-name>
            <parent-name>[sample 2.json+]</parent-name>
            <remote-alias>Table Name</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Índice do documento (gerado)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Índice do documento (gerado)]</local-name>
            <parent-name>[sample 2.json+]</parent-name>
            <remote-alias>Índice do documento (gerado)</remote-alias>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>complemento.valorTotal</remote-name>
            <remote-type>5</remote-type>
            <local-name>[valorTotal]</local-name>
            <parent-name>[sample 2.json+]</parent-name>
            <remote-alias>complemento.valorTotal</remote-alias>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>dets.Índice (gerado)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[dets Índice (gerado)]</local-name>
            <parent-name>[sample 2.json+]</parent-name>
            <remote-alias>dets.Índice (gerado)</remote-alias>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>dets.Valor.nItem</remote-name>
            <remote-type>130</remote-type>
            <local-name>[nItem]</local-name>
            <parent-name>[sample 2.json+]</parent-name>
            <remote-alias>dets.Valor.nItem</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>dets.Valor.prod.indTot</remote-name>
            <remote-type>130</remote-type>
            <local-name>[indTot]</local-name>
            <parent-name>[sample 2.json+]</parent-name>
            <remote-alias>dets.Valor.prod.indTot</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>dets.Valor.prod.qCom</remote-name>
            <remote-type>5</remote-type>
            <local-name>[qCom]</local-name>
            <parent-name>[sample 2.json+]</parent-name>
            <remote-alias>dets.Valor.prod.qCom</remote-alias>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>dets.Valor.prod.uCom</remote-name>
            <remote-type>130</remote-type>
            <local-name>[uCom]</local-name>
            <parent-name>[sample 2.json+]</parent-name>
            <remote-alias>dets.Valor.prod.uCom</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>dets.Valor.prod.vProd</remote-name>
            <remote-type>5</remote-type>
            <local-name>[vProd (dets.prod)]</local-name>
            <parent-name>[sample 2.json+]</parent-name>
            <remote-alias>dets.Valor.prod.vProd</remote-alias>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>dets.Valor.prod.vUnCom</remote-name>
            <remote-type>5</remote-type>
            <local-name>[vUnCom]</local-name>
            <parent-name>[sample 2.json+]</parent-name>
            <remote-alias>dets.Valor.prod.vUnCom</remote-alias>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>dets.Valor.prod.xProd</remote-name>
            <remote-type>130</remote-type>
            <local-name>[xProd]</local-name>
            <parent-name>[sample 2.json+]</parent-name>
            <remote-alias>dets.Valor.prod.xProd</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>emit.cnpj</remote-name>
            <remote-type>130</remote-type>
            <local-name>[cnpj]</local-name>
            <parent-name>[sample 2.json+]</parent-name>
            <remote-alias>emit.cnpj</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>emit.enderEmit.fone</remote-name>
            <remote-type>130</remote-type>
            <local-name>[fone]</local-name>
            <parent-name>[sample 2.json+]</parent-name>
            <remote-alias>emit.enderEmit.fone</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>emit.enderEmit.uf</remote-name>
            <remote-type>130</remote-type>
            <local-name>[uf]</local-name>
            <parent-name>[sample 2.json+]</parent-name>
            <remote-alias>emit.enderEmit.uf</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>emit.enderEmit.xBairro</remote-name>
            <remote-type>130</remote-type>
            <local-name>[xBairro]</local-name>
            <parent-name>[sample 2.json+]</parent-name>
            <remote-alias>emit.enderEmit.xBairro</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>emit.enderEmit.xLgr</remote-name>
            <remote-type>130</remote-type>
            <local-name>[xLgr]</local-name>
            <parent-name>[sample 2.json+]</parent-name>
            <remote-alias>emit.enderEmit.xLgr</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>emit.enderEmit.xMun</remote-name>
            <remote-type>130</remote-type>
            <local-name>[xMun]</local-name>
            <parent-name>[sample 2.json+]</parent-name>
            <remote-alias>emit.enderEmit.xMun</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>emit.enderEmit.xPais</remote-name>
            <remote-type>130</remote-type>
            <local-name>[xPais]</local-name>
            <parent-name>[sample 2.json+]</parent-name>
            <remote-alias>emit.enderEmit.xPais</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>emit.xFant</remote-name>
            <remote-type>130</remote-type>
            <local-name>[xFant]</local-name>
            <parent-name>[sample 2.json+]</parent-name>
            <remote-alias>emit.xFant</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ide.dhEmi.$date</remote-name>
            <remote-type>130</remote-type>
            <local-name>[$date]</local-name>
            <parent-name>[sample 2.json+]</parent-name>
            <remote-alias>ide.dhEmi.$date</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ide.natOp</remote-name>
            <remote-type>130</remote-type>
            <local-name>[natOp]</local-name>
            <parent-name>[sample 2.json+]</parent-name>
            <remote-alias>ide.natOp</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>infAdic.infCpl</remote-name>
            <remote-type>130</remote-type>
            <local-name>[infCpl]</local-name>
            <parent-name>[sample 2.json+]</parent-name>
            <remote-alias>infAdic.infCpl</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total.icmsTot.vDesc</remote-name>
            <remote-type>5</remote-type>
            <local-name>[vDesc]</local-name>
            <parent-name>[sample 2.json+]</parent-name>
            <remote-alias>total.icmsTot.vDesc</remote-alias>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total.icmsTot.vFrete</remote-name>
            <remote-type>5</remote-type>
            <local-name>[vFrete]</local-name>
            <parent-name>[sample 2.json+]</parent-name>
            <remote-alias>total.icmsTot.vFrete</remote-alias>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total.icmsTot.vOutro</remote-name>
            <remote-type>5</remote-type>
            <local-name>[vOutro]</local-name>
            <parent-name>[sample 2.json+]</parent-name>
            <remote-alias>total.icmsTot.vOutro</remote-alias>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total.icmsTot.vProd</remote-name>
            <remote-type>5</remote-type>
            <local-name>[vProd (total.icmsTot)]</local-name>
            <parent-name>[sample 2.json+]</parent-name>
            <remote-alias>total.icmsTot.vProd</remote-alias>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total.icmsTot.vSeg</remote-name>
            <remote-type>5</remote-type>
            <local-name>[vSeg]</local-name>
            <parent-name>[sample 2.json+]</parent-name>
            <remote-alias>total.icmsTot.vSeg</remote-alias>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total.icmsTot.vTotTrib</remote-name>
            <remote-type>5</remote-type>
            <local-name>[vTotTrib]</local-name>
            <parent-name>[sample 2.json+]</parent-name>
            <remote-alias>total.icmsTot.vTotTrib</remote-alias>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total.icmsTot.vbc</remote-name>
            <remote-type>5</remote-type>
            <local-name>[vbc]</local-name>
            <parent-name>[sample 2.json+]</parent-name>
            <remote-alias>total.icmsTot.vbc</remote-alias>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total.icmsTot.vbcst</remote-name>
            <remote-type>5</remote-type>
            <local-name>[vbcst]</local-name>
            <parent-name>[sample 2.json+]</parent-name>
            <remote-alias>total.icmsTot.vbcst</remote-alias>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total.icmsTot.vcofins</remote-name>
            <remote-type>5</remote-type>
            <local-name>[vcofins]</local-name>
            <parent-name>[sample 2.json+]</parent-name>
            <remote-alias>total.icmsTot.vcofins</remote-alias>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total.icmsTot.vicms</remote-name>
            <remote-type>5</remote-type>
            <local-name>[vicms]</local-name>
            <parent-name>[sample 2.json+]</parent-name>
            <remote-alias>total.icmsTot.vicms</remote-alias>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total.icmsTot.vicmsDeson</remote-name>
            <remote-type>5</remote-type>
            <local-name>[vicmsDeson]</local-name>
            <parent-name>[sample 2.json+]</parent-name>
            <remote-alias>total.icmsTot.vicmsDeson</remote-alias>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total.icmsTot.vii</remote-name>
            <remote-type>5</remote-type>
            <local-name>[vii]</local-name>
            <parent-name>[sample 2.json+]</parent-name>
            <remote-alias>total.icmsTot.vii</remote-alias>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total.icmsTot.vipi</remote-name>
            <remote-type>5</remote-type>
            <local-name>[vipi]</local-name>
            <parent-name>[sample 2.json+]</parent-name>
            <remote-alias>total.icmsTot.vipi</remote-alias>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total.icmsTot.vnf</remote-name>
            <remote-type>5</remote-type>
            <local-name>[vnf]</local-name>
            <parent-name>[sample 2.json+]</parent-name>
            <remote-alias>total.icmsTot.vnf</remote-alias>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total.icmsTot.vpis</remote-name>
            <remote-type>5</remote-type>
            <local-name>[vpis]</local-name>
            <parent-name>[sample 2.json+]</parent-name>
            <remote-alias>total.icmsTot.vpis</remote-alias>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total.icmsTot.vst</remote-name>
            <remote-type>5</remote-type>
            <local-name>[vst]</local-name>
            <parent-name>[sample 2.json+]</parent-name>
            <remote-alias>total.icmsTot.vst</remote-alias>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>versaoDocumento</remote-name>
            <remote-type>5</remote-type>
            <local-name>[versaoDocumento]</local-name>
            <parent-name>[sample 2.json+]</parent-name>
            <remote-alias>versaoDocumento</remote-alias>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column aggregation='Sum' datatype='integer' name='[$Date (Dias da semana)]' role='dimension' type='ordinal' user:agg-type='Weekday' user:base-field='$date' user:ui-builder='date-bin-builder'>
        <calculation class='tableau' formula='DATEPART(&apos;weekday&apos;, [$date])' />
      </column>
      <column caption='$Date' datatype='datetime' datatype-customized='true' name='[$date]' role='dimension' type='ordinal'>
        <desc>
          <formatted-text>
            <run>ide.dhEmi.$date</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Cálculo1' datatype='datetime' name='[Calculation_1097541337885310976]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='[$date]' />
      </column>
      <column caption='Ticket Médio' datatype='real' name='[Calculation_1097541337887240193]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([valorTotal])/[Calculation_1097541337889181698]' />
      </column>
      <column caption='Qtde_mesas' datatype='integer' name='[Calculation_1097541337889181698]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='COUNT([Índice do documento (gerado)])' />
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='integer' is-auto-gen-lod-field='true' name='[Número de registros por dets]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='{ INCLUDE [Índice do documento (gerado)] : COUNTD([dets Índice (gerado)]) }' />
        <desc>
          <formatted-text>
            <run>Uma medida calculada que está em dets nível de detalhe</run>
          </formatted-text>
        </desc>
      </column>
      <column datatype='integer' is-auto-gen-lod-field='true' name='[Número de registros por sample 2.json+]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='COUNTD([Índice do documento (gerado)])' />
        <desc>
          <formatted-text>
            <run>Uma medida calculada que está em sample 2.json+ nível de detalhe</run>
          </formatted-text>
        </desc>
      </column>
      <column datatype='real' is-auto-gen-lod-field='true' name='[Q Com por prod]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='{ FIXED [Índice do documento (gerado)],[dets Índice (gerado)] : MAX([qCom]) }' />
        <desc>
          <formatted-text>
            <run>Uma medida calculada que está em prod nível de detalhe</run>
          </formatted-text>
        </desc>
      </column>
      <column datatype='string' hidden='true' name='[Table Name]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>Table Name</run>
          </formatted-text>
        </desc>
      </column>
      <column datatype='real' is-auto-gen-lod-field='true' name='[V Desc por icmsTot]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='{ FIXED [Índice do documento (gerado)] : MAX([vDesc]) }' />
        <desc>
          <formatted-text>
            <run>Uma medida calculada que está em icmsTot nível de detalhe</run>
          </formatted-text>
        </desc>
      </column>
      <column datatype='real' is-auto-gen-lod-field='true' name='[V Frete por icmsTot]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='{ FIXED [Índice do documento (gerado)] : MAX([vFrete]) }' />
        <desc>
          <formatted-text>
            <run>Uma medida calculada que está em icmsTot nível de detalhe</run>
          </formatted-text>
        </desc>
      </column>
      <column datatype='real' is-auto-gen-lod-field='true' name='[V Outro por icmsTot]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='{ FIXED [Índice do documento (gerado)] : MAX([vOutro]) }' />
        <desc>
          <formatted-text>
            <run>Uma medida calculada que está em icmsTot nível de detalhe</run>
          </formatted-text>
        </desc>
      </column>
      <column datatype='real' is-auto-gen-lod-field='true' name='[V Seg por icmsTot]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='{ FIXED [Índice do documento (gerado)] : MAX([vSeg]) }' />
        <desc>
          <formatted-text>
            <run>Uma medida calculada que está em icmsTot nível de detalhe</run>
          </formatted-text>
        </desc>
      </column>
      <column datatype='real' is-auto-gen-lod-field='true' name='[V Tot Trib por icmsTot]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='{ FIXED [Índice do documento (gerado)] : MAX([vTotTrib]) }' />
        <desc>
          <formatted-text>
            <run>Uma medida calculada que está em icmsTot nível de detalhe</run>
          </formatted-text>
        </desc>
      </column>
      <column datatype='real' is-auto-gen-lod-field='true' name='[V Un Com por prod]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='{ FIXED [Índice do documento (gerado)],[dets Índice (gerado)] : MAX([vUnCom]) }' />
        <desc>
          <formatted-text>
            <run>Uma medida calculada que está em prod nível de detalhe</run>
          </formatted-text>
        </desc>
      </column>
      <column datatype='real' is-auto-gen-lod-field='true' name='[Valor Total por complemento]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='{ FIXED [Índice do documento (gerado)] : MAX([valorTotal]) }' />
        <desc>
          <formatted-text>
            <run>Uma medida calculada que está em complemento nível de detalhe</run>
          </formatted-text>
        </desc>
      </column>
      <column datatype='real' is-auto-gen-lod-field='true' name='[Vbc por icmsTot]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='{ FIXED [Índice do documento (gerado)] : MAX([vbc]) }' />
        <desc>
          <formatted-text>
            <run>Uma medida calculada que está em icmsTot nível de detalhe</run>
          </formatted-text>
        </desc>
      </column>
      <column datatype='real' is-auto-gen-lod-field='true' name='[Vbcst por icmsTot]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='{ FIXED [Índice do documento (gerado)] : MAX([vbcst]) }' />
        <desc>
          <formatted-text>
            <run>Uma medida calculada que está em icmsTot nível de detalhe</run>
          </formatted-text>
        </desc>
      </column>
      <column datatype='real' is-auto-gen-lod-field='true' name='[Vcofins por icmsTot]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='{ FIXED [Índice do documento (gerado)] : MAX([vcofins]) }' />
        <desc>
          <formatted-text>
            <run>Uma medida calculada que está em icmsTot nível de detalhe</run>
          </formatted-text>
        </desc>
      </column>
      <column datatype='real' is-auto-gen-lod-field='true' name='[Versao Documento por Documento]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='{ FIXED [Índice do documento (gerado)] : MAX([versaoDocumento]) }' />
        <desc>
          <formatted-text>
            <run>Uma medida calculada que está em Documento nível de detalhe</run>
          </formatted-text>
        </desc>
      </column>
      <column datatype='real' is-auto-gen-lod-field='true' name='[Vicms Deson por icmsTot]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='{ FIXED [Índice do documento (gerado)] : MAX([vicmsDeson]) }' />
        <desc>
          <formatted-text>
            <run>Uma medida calculada que está em icmsTot nível de detalhe</run>
          </formatted-text>
        </desc>
      </column>
      <column datatype='real' is-auto-gen-lod-field='true' name='[Vicms por icmsTot]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='{ FIXED [Índice do documento (gerado)] : MAX([vicms]) }' />
        <desc>
          <formatted-text>
            <run>Uma medida calculada que está em icmsTot nível de detalhe</run>
          </formatted-text>
        </desc>
      </column>
      <column datatype='real' is-auto-gen-lod-field='true' name='[Vii por icmsTot]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='{ FIXED [Índice do documento (gerado)] : MAX([vii]) }' />
        <desc>
          <formatted-text>
            <run>Uma medida calculada que está em icmsTot nível de detalhe</run>
          </formatted-text>
        </desc>
      </column>
      <column datatype='real' is-auto-gen-lod-field='true' name='[Vipi por icmsTot]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='{ FIXED [Índice do documento (gerado)] : MAX([vipi]) }' />
        <desc>
          <formatted-text>
            <run>Uma medida calculada que está em icmsTot nível de detalhe</run>
          </formatted-text>
        </desc>
      </column>
      <column datatype='real' is-auto-gen-lod-field='true' name='[Vnf por icmsTot]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='{ FIXED [Índice do documento (gerado)] : MAX([vnf]) }' />
        <desc>
          <formatted-text>
            <run>Uma medida calculada que está em icmsTot nível de detalhe</run>
          </formatted-text>
        </desc>
      </column>
      <column datatype='real' is-auto-gen-lod-field='true' name='[Vpis por icmsTot]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='{ FIXED [Índice do documento (gerado)] : MAX([vpis]) }' />
        <desc>
          <formatted-text>
            <run>Uma medida calculada que está em icmsTot nível de detalhe</run>
          </formatted-text>
        </desc>
      </column>
      <column datatype='real' is-auto-gen-lod-field='true' name='[Vst por icmsTot]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='{ FIXED [Índice do documento (gerado)] : MAX([vst]) }' />
        <desc>
          <formatted-text>
            <run>Uma medida calculada que está em icmsTot nível de detalhe</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Cnpj' datatype='string' name='[cnpj]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>emit.cnpj</run>
          </formatted-text>
        </desc>
      </column>
      <column aggregation='Sum' caption='Dets Índice (Gerado)' datatype='integer' name='[dets Índice (gerado)]' role='dimension' type='ordinal'>
        <desc>
          <formatted-text>
            <run>dets.Índice (gerado)</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Fone' datatype='string' name='[fone]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>emit.enderEmit.fone</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Ind Tot' datatype='string' name='[indTot]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>dets.Valor.prod.indTot</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Inf Cpl' datatype='string' name='[infCpl]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>infAdic.infCpl</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='N Item' datatype='string' name='[nItem]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>dets.Valor.nItem</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Nat Op' datatype='string' name='[natOp]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>ide.natOp</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Q Com' datatype='real' name='[qCom]' role='measure' type='quantitative'>
        <desc>
          <formatted-text>
            <run>dets.Valor.prod.qCom</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='U Com' datatype='string' name='[uCom]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>dets.Valor.prod.uCom</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Uf' datatype='string' name='[uf]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
        <desc>
          <formatted-text>
            <run>emit.enderEmit.uf</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='V Desc' datatype='real' name='[vDesc]' role='measure' type='quantitative'>
        <desc>
          <formatted-text>
            <run>total.icmsTot.vDesc</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='V Frete' datatype='real' name='[vFrete]' role='measure' type='quantitative'>
        <desc>
          <formatted-text>
            <run>total.icmsTot.vFrete</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='V Outro' datatype='real' name='[vOutro]' role='measure' type='quantitative'>
        <desc>
          <formatted-text>
            <run>total.icmsTot.vOutro</run>
          </formatted-text>
        </desc>
      </column>
      <column datatype='real' name='[vProd (dets.prod)]' role='measure' type='quantitative'>
        <desc>
          <formatted-text>
            <run>dets.Valor.prod.vProd</run>
          </formatted-text>
        </desc>
      </column>
      <column datatype='real' name='[vProd (total.icmsTot)]' role='measure' type='quantitative'>
        <desc>
          <formatted-text>
            <run>total.icmsTot.vProd</run>
          </formatted-text>
        </desc>
      </column>
      <column datatype='real' is-auto-gen-lod-field='true' name='[vProd por dets.prod]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='{ FIXED [Índice do documento (gerado)],[dets Índice (gerado)] : MAX([vProd (dets.prod)]) }' />
        <desc>
          <formatted-text>
            <run>Uma medida calculada que está em prod nível de detalhe</run>
          </formatted-text>
        </desc>
      </column>
      <column datatype='real' is-auto-gen-lod-field='true' name='[vProd por total.icmsTot]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='{ FIXED [Índice do documento (gerado)] : MAX([vProd (total.icmsTot)]) }' />
        <desc>
          <formatted-text>
            <run>Uma medida calculada que está em icmsTot nível de detalhe</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='V Seg' datatype='real' name='[vSeg]' role='measure' type='quantitative'>
        <desc>
          <formatted-text>
            <run>total.icmsTot.vSeg</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='V Tot Trib' datatype='real' name='[vTotTrib]' role='measure' type='quantitative'>
        <desc>
          <formatted-text>
            <run>total.icmsTot.vTotTrib</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='V Un Com' datatype='real' name='[vUnCom]' role='measure' type='quantitative'>
        <desc>
          <formatted-text>
            <run>dets.Valor.prod.vUnCom</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Valor Total' datatype='real' name='[valorTotal]' role='measure' type='quantitative'>
        <desc>
          <formatted-text>
            <run>complemento.valorTotal</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Vbc' datatype='real' name='[vbc]' role='measure' type='quantitative'>
        <desc>
          <formatted-text>
            <run>total.icmsTot.vbc</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Vbcst' datatype='real' name='[vbcst]' role='measure' type='quantitative'>
        <desc>
          <formatted-text>
            <run>total.icmsTot.vbcst</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Vcofins' datatype='real' name='[vcofins]' role='measure' type='quantitative'>
        <desc>
          <formatted-text>
            <run>total.icmsTot.vcofins</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Versao Documento' datatype='real' name='[versaoDocumento]' role='measure' type='quantitative'>
        <desc>
          <formatted-text>
            <run>versaoDocumento</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Vicms Deson' datatype='real' name='[vicmsDeson]' role='measure' type='quantitative'>
        <desc>
          <formatted-text>
            <run>total.icmsTot.vicmsDeson</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Vicms' datatype='real' name='[vicms]' role='measure' type='quantitative'>
        <desc>
          <formatted-text>
            <run>total.icmsTot.vicms</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Vii' datatype='real' name='[vii]' role='measure' type='quantitative'>
        <desc>
          <formatted-text>
            <run>total.icmsTot.vii</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Vipi' datatype='real' name='[vipi]' role='measure' type='quantitative'>
        <desc>
          <formatted-text>
            <run>total.icmsTot.vipi</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Vnf' datatype='real' name='[vnf]' role='measure' type='quantitative'>
        <desc>
          <formatted-text>
            <run>total.icmsTot.vnf</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Vpis' datatype='real' name='[vpis]' role='measure' type='quantitative'>
        <desc>
          <formatted-text>
            <run>total.icmsTot.vpis</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Vst' datatype='real' name='[vst]' role='measure' type='quantitative'>
        <desc>
          <formatted-text>
            <run>total.icmsTot.vst</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='X Bairro' datatype='string' name='[xBairro]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>emit.enderEmit.xBairro</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='X Fant' datatype='string' name='[xFant]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>emit.xFant</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='X Lgr' datatype='string' name='[xLgr]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>emit.enderEmit.xLgr</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='X Mun' datatype='string' name='[xMun]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>emit.enderEmit.xMun</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='X Pais' datatype='string' name='[xPais]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>emit.enderEmit.xPais</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='X Prod' datatype='string' name='[xProd]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>dets.Valor.prod.xProd</run>
          </formatted-text>
        </desc>
      </column>
      <column aggregation='Sum' caption='Índice Do Documento (Gerado)' datatype='integer' name='[Índice do documento (gerado)]' role='dimension' type='ordinal'>
        <desc>
          <formatted-text>
            <run>Índice do documento (gerado)</run>
          </formatted-text>
        </desc>
      </column>
      <column-instance column='[$date]' derivation='Day' name='[dy:$date:ok]' pivot='key' type='ordinal' />
      <column-instance column='[$date]' derivation='Month' name='[mn:$date:ok]' pivot='key' type='ordinal' />
      <column-instance column='[$Date (Dias da semana)]' derivation='None' name='[none:$Date (Dias da semana):ok]' pivot='key' type='ordinal' />
      <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
      <column-instance column='[$date]' derivation='Quarter' name='[qr:$date:ok]' pivot='key' type='ordinal' />
      <column-instance column='[$date]' derivation='Year' name='[yr:$date:ok]' pivot='key' type='ordinal' />
      <group name='[terça-feira]' name-style='unqualified' user:ui-builder='lasso-group'>
        <groupfilter function='union'>
          <groupfilter function='union'>
            <groupfilter function='reorder-dimensionality'>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[$Date (Dias da semana)]' member='3' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[dy:$date:ok]' member='5' />
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[mn:$date:ok]' member='1' />
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[qr:$date:ok]' member='1' />
                      <groupfilter function='member' level='[yr:$date:ok]' member='2016' />
                    </groupfilter>
                  </groupfilter>
                </groupfilter>
              </groupfilter>
              <order>
                <hierarchy name='[$Date (Dias da semana)]' />
                <hierarchy name='[yr:$date:ok]' />
                <hierarchy name='[dy:$date:ok]' />
                <hierarchy name='[mn:$date:ok]' />
                <hierarchy name='[qr:$date:ok]' />
              </order>
            </groupfilter>
            <groupfilter function='reorder-dimensionality'>
              <groupfilter function='reorder-dimensionality'>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[$Date (Dias da semana)]' member='3' />
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[dy:$date:ok]' member='12' />
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[mn:$date:ok]' member='1' />
                      <groupfilter function='crossjoin'>
                        <groupfilter function='member' level='[qr:$date:ok]' member='1' />
                        <groupfilter function='member' level='[yr:$date:ok]' member='2016' />
                      </groupfilter>
                    </groupfilter>
                  </groupfilter>
                </groupfilter>
                <order>
                  <hierarchy name='[dy:$date:ok]' />
                  <hierarchy name='[mn:$date:ok]' />
                  <hierarchy name='[$Date (Dias da semana)]' />
                  <hierarchy name='[qr:$date:ok]' />
                  <hierarchy name='[yr:$date:ok]' />
                </order>
              </groupfilter>
              <order>
                <hierarchy name='[$Date (Dias da semana)]' />
                <hierarchy name='[yr:$date:ok]' />
                <hierarchy name='[dy:$date:ok]' />
                <hierarchy name='[mn:$date:ok]' />
                <hierarchy name='[qr:$date:ok]' />
              </order>
            </groupfilter>
          </groupfilter>
          <groupfilter function='reorder-dimensionality'>
            <groupfilter function='reorder-dimensionality'>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[$Date (Dias da semana)]' member='3' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[dy:$date:ok]' member='19' />
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[mn:$date:ok]' member='1' />
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[qr:$date:ok]' member='1' />
                      <groupfilter function='member' level='[yr:$date:ok]' member='2016' />
                    </groupfilter>
                  </groupfilter>
                </groupfilter>
              </groupfilter>
              <order>
                <hierarchy name='[dy:$date:ok]' />
                <hierarchy name='[mn:$date:ok]' />
                <hierarchy name='[$Date (Dias da semana)]' />
                <hierarchy name='[qr:$date:ok]' />
                <hierarchy name='[yr:$date:ok]' />
              </order>
            </groupfilter>
            <order>
              <hierarchy name='[$Date (Dias da semana)]' />
              <hierarchy name='[yr:$date:ok]' />
              <hierarchy name='[dy:$date:ok]' />
              <hierarchy name='[mn:$date:ok]' />
              <hierarchy name='[qr:$date:ok]' />
            </order>
          </groupfilter>
        </groupfilter>
      </group>
      <folder name='Dets' role='dimensions'>
        <folder-item name='[dets Índice (gerado)]' type='field' />
        <folder-item name='[nItem]' type='field' />
      </folder>
      <folder name='Dh Emi' role='dimensions'>
        <folder-item name='[$date]' type='field' />
      </folder>
      <folder name='Emit' role='dimensions'>
        <folder-item name='[cnpj]' type='field' />
        <folder-item name='[xFant]' type='field' />
      </folder>
      <folder name='Ender Emit' role='dimensions'>
        <folder-item name='[fone]' type='field' />
        <folder-item name='[uf]' type='field' />
        <folder-item name='[xBairro]' type='field' />
        <folder-item name='[xLgr]' type='field' />
        <folder-item name='[xMun]' type='field' />
        <folder-item name='[xPais]' type='field' />
      </folder>
      <folder name='Ide' role='dimensions'>
        <folder-item name='[natOp]' type='field' />
      </folder>
      <folder name='Inf Adic' role='dimensions'>
        <folder-item name='[infCpl]' type='field' />
      </folder>
      <folder name='Prod' role='dimensions'>
        <folder-item name='[indTot]' type='field' />
        <folder-item name='[uCom]' type='field' />
        <folder-item name='[xProd]' type='field' />
      </folder>
      <folder name='Sample 2' role='dimensions'>
        <folder-item name='[Table Name]' type='field' />
        <folder-item name='[Índice do documento (gerado)]' type='field' />
      </folder>
      <folder name='Medidas de origem' role='measures'>
        <folder-item name='[qCom]' type='field' />
        <folder-item name='[vDesc]' type='field' />
        <folder-item name='[vFrete]' type='field' />
        <folder-item name='[vOutro]' type='field' />
        <folder-item name='[vProd (dets.prod)]' type='field' />
        <folder-item name='[vProd (total.icmsTot)]' type='field' />
        <folder-item name='[vSeg]' type='field' />
        <folder-item name='[vTotTrib]' type='field' />
        <folder-item name='[vUnCom]' type='field' />
        <folder-item name='[valorTotal]' type='field' />
        <folder-item name='[vbc]' type='field' />
        <folder-item name='[vbcst]' type='field' />
        <folder-item name='[vcofins]' type='field' />
        <folder-item name='[versaoDocumento]' type='field' />
        <folder-item name='[vicmsDeson]' type='field' />
        <folder-item name='[vicms]' type='field' />
        <folder-item name='[vii]' type='field' />
        <folder-item name='[vipi]' type='field' />
        <folder-item name='[vnf]' type='field' />
        <folder-item name='[vpis]' type='field' />
        <folder-item name='[vst]' type='field' />
      </folder>
      <layout dim-ordering='alphabetic' dim-percentage='0.5' group-percentage='0.0429104' measure-ordering='alphabetic' measure-percentage='0.45709' show-structure='false' user-set-layout='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:$Date (Dias da semana):ok]' type='palette'>
            <map to='#4e79a7'>
              <bucket>2</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>6</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>5</bucket>
            </map>
            <map to='#e15759'>
              <bucket>4</bucket>
            </map>
            <map to='#edc948'>
              <bucket>7</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>3</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Brasil&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
      <default-sorts>
        <sort class='manual' column='[none:Forecast Indicator:nk]' direction='ASC'>
          <dictionary>
            <bucket>&quot;Real&quot;</bucket>
            <bucket>&quot;Estimar&quot;</bucket>
          </dictionary>
        </sort>
      </default-sorts>
      <field-sort-info field-sort-order-type='custom-order'>
        <field-sort-custom-order field='Índice do documento (gerado)' />
        <field-sort-custom-order field='Calculation_1097541337889181698' />
        <field-sort-custom-order field='valorTotal' />
        <field-sort-custom-order field='dets Índice (gerado)' />
        <field-sort-custom-order field='Calculation_1097541337887240193' />
        <field-sort-custom-order field='nItem' />
        <field-sort-custom-order field='indTot' />
        <field-sort-custom-order field='qCom' />
        <field-sort-custom-order field='uCom' />
        <field-sort-custom-order field='vProd (dets.prod)' />
        <field-sort-custom-order field='vUnCom' />
        <field-sort-custom-order field='xProd' />
        <field-sort-custom-order field='cnpj' />
        <field-sort-custom-order field='fone' />
        <field-sort-custom-order field='uf' />
        <field-sort-custom-order field='xBairro' />
        <field-sort-custom-order field='xLgr' />
        <field-sort-custom-order field='xMun' />
        <field-sort-custom-order field='xPais' />
        <field-sort-custom-order field='xFant' />
        <field-sort-custom-order field='$date' />
        <field-sort-custom-order field='Calculation_1097541337885310976' />
        <field-sort-custom-order field='natOp' />
        <field-sort-custom-order field='infCpl' />
        <field-sort-custom-order field='vDesc' />
        <field-sort-custom-order field='vFrete' />
        <field-sort-custom-order field='vOutro' />
        <field-sort-custom-order field='vProd (total.icmsTot)' />
        <field-sort-custom-order field='vSeg' />
        <field-sort-custom-order field='vTotTrib' />
        <field-sort-custom-order field='vbc' />
        <field-sort-custom-order field='vbcst' />
        <field-sort-custom-order field='vcofins' />
        <field-sort-custom-order field='vicms' />
        <field-sort-custom-order field='vicmsDeson' />
        <field-sort-custom-order field='vii' />
        <field-sort-custom-order field='vipi' />
        <field-sort-custom-order field='vnf' />
        <field-sort-custom-order field='vpis' />
        <field-sort-custom-order field='vst' />
        <field-sort-custom-order field='versaoDocumento' />
        <field-sort-custom-order field='Número de registros por dets' />
        <field-sort-custom-order field='Número de registros por sample 2.json+' />
        <field-sort-custom-order field='Q Com por prod' />
        <field-sort-custom-order field='V Desc por icmsTot' />
        <field-sort-custom-order field='V Frete por icmsTot' />
        <field-sort-custom-order field='V Outro por icmsTot' />
        <field-sort-custom-order field='V Seg por icmsTot' />
        <field-sort-custom-order field='V Tot Trib por icmsTot' />
        <field-sort-custom-order field='V Un Com por prod' />
        <field-sort-custom-order field='Valor Total por complemento' />
        <field-sort-custom-order field='Vbc por icmsTot' />
        <field-sort-custom-order field='Vbcst por icmsTot' />
        <field-sort-custom-order field='Vcofins por icmsTot' />
        <field-sort-custom-order field='Versao Documento por Documento' />
        <field-sort-custom-order field='Vicms Deson por icmsTot' />
        <field-sort-custom-order field='Vicms por icmsTot' />
        <field-sort-custom-order field='Vii por icmsTot' />
        <field-sort-custom-order field='Vipi por icmsTot' />
        <field-sort-custom-order field='Vnf por icmsTot' />
        <field-sort-custom-order field='Vpis por icmsTot' />
        <field-sort-custom-order field='Vst por icmsTot' />
        <field-sort-custom-order field='vProd por dets.prod' />
        <field-sort-custom-order field='vProd por total.icmsTot' />
      </field-sort-info>
    </datasource>
    <datasource caption='solucao_tableau' inline='true' name='federated.03yzlu51hcrr3o0ztp2nq1cb4gko' version='10.2'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='solucao_tableau' name='textscan.0c0omwm19r68vn193y4n10xzzprs'>
            <connection class='textscan' directory='/Users/rafaelleite/Desktop/Desafio TOTVS/tableau' filename='solucao_tableau.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.0c0omwm19r68vn193y4n10xzzprs' name='solucao_tableau.csv' table='[solucao_tableau#csv]' type='table'>
          <columns character-set='UTF-16LE' header='yes' locale='pt_BR' separator='&#9;'>
            <column datatype='string' name='weekday' ordinal='0' />
            <column datatype='date' date-parse-format='dd|#|#|mm|#|#|ss|#|#|yy|#|#|EEEEdd|#|#|HH|#|#|MMMMdd|#|#|MMMM|#|#|MM' name='day' ordinal='1' />
            <column datatype='string' name='month' ordinal='2' />
            <column datatype='string' name='type' ordinal='3' />
            <column datatype='real' name='total_sales' ordinal='4' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[solucao_tableau.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-16LE&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;pt_BR&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;R$&quot;</attribute>
              <attribute datatype='string' name='decimal-char'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;\\t&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;pt_BR&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='thousands-char'>&quot;.&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>weekday</remote-name>
            <remote-type>129</remote-type>
            <local-name>[weekday]</local-name>
            <parent-name>[solucao_tableau.csv]</parent-name>
            <remote-alias>weekday</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LPT_RBR' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;pt_BR&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>day</remote-name>
            <remote-type>7</remote-type>
            <local-name>[day]</local-name>
            <parent-name>[solucao_tableau.csv]</parent-name>
            <remote-alias>day</remote-alias>
            <ordinal>1</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='LPT_RBR' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>month</remote-name>
            <remote-type>129</remote-type>
            <local-name>[month]</local-name>
            <parent-name>[solucao_tableau.csv]</parent-name>
            <remote-alias>month</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LPT_RBR' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;pt_BR&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>type</remote-name>
            <remote-type>129</remote-type>
            <local-name>[type]</local-name>
            <parent-name>[solucao_tableau.csv]</parent-name>
            <remote-alias>type</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LPT_RBR' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;pt_BR&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_sales</remote-name>
            <remote-type>5</remote-type>
            <local-name>[total_sales]</local-name>
            <parent-name>[solucao_tableau.csv]</parent-name>
            <remote-alias>total_sales</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Day' datatype='date' name='[day]' role='dimension' type='ordinal' />
      <column caption='Month' datatype='string' name='[month]' role='dimension' type='nominal' />
      <column caption='Total Sales' datatype='real' name='[total_sales]' role='measure' type='quantitative' />
      <column caption='Type' datatype='string' name='[type]' role='dimension' type='nominal' />
      <column caption='Weekday' datatype='string' name='[weekday]' role='dimension' type='nominal' />
      <column-instance column='[type]' derivation='None' name='[none:type:nk]' pivot='key' type='nominal' />
      <layout dim-ordering='alphabetic' dim-percentage='0.538188' measure-ordering='alphabetic' measure-percentage='0.461812' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:type:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;forecast&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;real_sales&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Brasil&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='Planilha 7'>
      <table>
        <view>
          <datasources>
            <datasource caption='sample 2' name='federated.1308qto18dp5dc1ad09b307x0060' />
          </datasources>
          <datasource-dependencies datasource='federated.1308qto18dp5dc1ad09b307x0060'>
            <column aggregation='Sum' datatype='integer' name='[$Date (Dias da semana)]' role='dimension' type='ordinal' user:agg-type='Weekday' user:base-field='$date' user:ui-builder='date-bin-builder'>
              <calculation class='tableau' formula='DATEPART(&apos;weekday&apos;, [$date])' />
            </column>
            <column caption='$Date' datatype='datetime' datatype-customized='true' name='[$date]' role='dimension' type='ordinal'>
              <desc>
                <formatted-text>
                  <run>ide.dhEmi.$date</run>
                </formatted-text>
              </desc>
            </column>
            <column caption='Ticket Médio' datatype='real' name='[Calculation_1097541337887240193]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([valorTotal])/[Calculation_1097541337889181698]' />
            </column>
            <column caption='Qtde_mesas' datatype='integer' name='[Calculation_1097541337889181698]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='COUNT([Índice do documento (gerado)])' />
            </column>
            <column-instance column='[$date]' derivation='Day' name='[dy:$date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[terça-feira]' derivation='InOut' name='[io:terça-feira:nk]' pivot='key' type='nominal' />
            <column-instance column='[$date]' derivation='Month' name='[mn:$date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[$date]' derivation='Quarter' name='[qr:$date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_1097541337887240193]' derivation='User' name='[usr:Calculation_1097541337887240193:qk]' pivot='key' type='quantitative' />
            <column caption='Valor Total' datatype='real' name='[valorTotal]' role='measure' type='quantitative'>
              <desc>
                <formatted-text>
                  <run>complemento.valorTotal</run>
                </formatted-text>
              </desc>
            </column>
            <column-instance column='[$date]' derivation='Year' name='[yr:$date:ok]' pivot='key' type='ordinal' />
            <column aggregation='Sum' caption='Índice Do Documento (Gerado)' datatype='integer' name='[Índice do documento (gerado)]' role='dimension' type='ordinal'>
              <desc>
                <formatted-text>
                  <run>Índice do documento (gerado)</run>
                </formatted-text>
              </desc>
            </column>
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <reference-line axis-column='[federated.1308qto18dp5dc1ad09b307x0060].[usr:Calculation_1097541337887240193:qk]' enable-instant-analytics='true' formula='average' id='refline0' label-type='automatic' probability='95' scope='per-pane' value-column='[federated.1308qto18dp5dc1ad09b307x0060].[usr:Calculation_1097541337887240193:qk]' z-order='1' />
          </pane>
        </panes>
        <rows>[federated.1308qto18dp5dc1ad09b307x0060].[usr:Calculation_1097541337887240193:qk]</rows>
        <cols>[federated.1308qto18dp5dc1ad09b307x0060].[io:terça-feira:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='main_data'>
      <table>
        <view>
          <datasources>
            <datasource caption='sample 2' name='federated.1308qto18dp5dc1ad09b307x0060' />
          </datasources>
          <datasource-dependencies datasource='federated.1308qto18dp5dc1ad09b307x0060'>
            <column aggregation='Sum' datatype='integer' name='[$Date (Dias da semana)]' role='dimension' type='ordinal' user:agg-type='Weekday' user:base-field='$date' user:ui-builder='date-bin-builder'>
              <calculation class='tableau' formula='DATEPART(&apos;weekday&apos;, [$date])' />
            </column>
            <column caption='$Date' datatype='datetime' datatype-customized='true' name='[$date]' role='dimension' type='ordinal'>
              <desc>
                <formatted-text>
                  <run>ide.dhEmi.$date</run>
                </formatted-text>
              </desc>
            </column>
            <column caption='Ticket Médio' datatype='real' name='[Calculation_1097541337887240193]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([valorTotal])/[Calculation_1097541337889181698]' />
            </column>
            <column caption='Qtde_mesas' datatype='integer' name='[Calculation_1097541337889181698]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='COUNT([Índice do documento (gerado)])' />
            </column>
            <column-instance column='[$date]' derivation='Day' name='[dy:$date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[$date]' derivation='Month' name='[mn:$date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[$Date (Dias da semana)]' derivation='None' name='[none:$Date (Dias da semana):ok]' pivot='key' type='ordinal' />
            <column-instance column='[valorTotal]' derivation='Sum' name='[sum:valorTotal:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1097541337887240193]' derivation='User' name='[usr:Calculation_1097541337887240193:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1097541337889181698]' derivation='User' name='[usr:Calculation_1097541337889181698:qk]' pivot='key' type='quantitative' />
            <column caption='Valor Total' datatype='real' name='[valorTotal]' role='measure' type='quantitative'>
              <desc>
                <formatted-text>
                  <run>complemento.valorTotal</run>
                </formatted-text>
              </desc>
            </column>
            <column aggregation='Sum' caption='Índice Do Documento (Gerado)' datatype='integer' name='[Índice do documento (gerado)]' role='dimension' type='ordinal'>
              <desc>
                <formatted-text>
                  <run>Índice do documento (gerado)</run>
                </formatted-text>
              </desc>
            </column>
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1308qto18dp5dc1ad09b307x0060].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1308qto18dp5dc1ad09b307x0060].[usr:Calculation_1097541337889181698:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1308qto18dp5dc1ad09b307x0060].[sum:valorTotal:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1308qto18dp5dc1ad09b307x0060].[usr:Calculation_1097541337887240193:qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[federated.1308qto18dp5dc1ad09b307x0060].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.1308qto18dp5dc1ad09b307x0060].[usr:Calculation_1097541337889181698:qk]&quot;</bucket>
              <bucket>&quot;[federated.1308qto18dp5dc1ad09b307x0060].[sum:valorTotal:qk]&quot;</bucket>
              <bucket>&quot;[federated.1308qto18dp5dc1ad09b307x0060].[usr:Calculation_1097541337887240193:qk]&quot;</bucket>
            </dictionary>
          </sort>
          <slices>
            <column>[federated.1308qto18dp5dc1ad09b307x0060].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.1308qto18dp5dc1ad09b307x0060].[usr:Calculation_1097541337887240193:qk]' value='C1046%' />
            <format attr='text-format' field='[federated.1308qto18dp5dc1ad09b307x0060].[sum:valorTotal:qk]' value='C1046%' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1308qto18dp5dc1ad09b307x0060].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1308qto18dp5dc1ad09b307x0060].[mn:$date:ok] / ([federated.1308qto18dp5dc1ad09b307x0060].[dy:$date:ok] / [federated.1308qto18dp5dc1ad09b307x0060].[none:$Date (Dias da semana):ok]))</rows>
        <cols>[federated.1308qto18dp5dc1ad09b307x0060].[:Measure Names]</cols>
      </table>
    </worksheet>
    <worksheet name='real_sales + forecast'>
      <table>
        <view>
          <datasources>
            <datasource caption='solucao_tableau' name='federated.03yzlu51hcrr3o0ztp2nq1cb4gko' />
          </datasources>
          <datasource-dependencies datasource='federated.03yzlu51hcrr3o0ztp2nq1cb4gko'>
            <column-instance column='[total_sales]' derivation='Attribute' name='[attr:total_sales:qk]' pivot='key' type='quantitative' />
            <column caption='Day' datatype='date' name='[day]' role='dimension' type='ordinal' />
            <column caption='Month' datatype='string' name='[month]' role='dimension' type='nominal' />
            <column-instance column='[day]' derivation='None' name='[none:day:ok]' pivot='key' type='ordinal' />
            <column-instance column='[month]' derivation='None' name='[none:month:nk]' pivot='key' type='nominal' />
            <column-instance column='[type]' derivation='None' name='[none:type:nk]' pivot='key' type='nominal' />
            <column-instance column='[total_sales]' derivation='Sum' name='[sum:total_sales:qk]' pivot='key' type='quantitative' />
            <column caption='Total Sales' datatype='real' name='[total_sales]' role='measure' type='quantitative' />
            <column caption='Type' datatype='string' name='[type]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.03yzlu51hcrr3o0ztp2nq1cb4gko].[none:day:ok]' value='32' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.03yzlu51hcrr3o0ztp2nq1cb4gko].[none:type:nk]' />
              <text column='[federated.03yzlu51hcrr3o0ztp2nq1cb4gko].[attr:total_sales:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.03yzlu51hcrr3o0ztp2nq1cb4gko].[sum:total_sales:qk]</rows>
        <cols>([federated.03yzlu51hcrr3o0ztp2nq1cb4gko].[none:month:nk] / [federated.03yzlu51hcrr3o0ztp2nq1cb4gko].[none:day:ok])</cols>
      </table>
    </worksheet>
    <worksheet name='real_sales + forecast 2'>
      <table>
        <view>
          <datasources>
            <datasource caption='solucao_tableau' name='federated.03yzlu51hcrr3o0ztp2nq1cb4gko' />
          </datasources>
          <datasource-dependencies datasource='federated.03yzlu51hcrr3o0ztp2nq1cb4gko'>
            <column-instance column='[total_sales]' derivation='Attribute' name='[attr:total_sales:qk]' pivot='key' type='quantitative' />
            <column caption='Day' datatype='date' name='[day]' role='dimension' type='ordinal' />
            <column-instance column='[day]' derivation='Day' name='[dy:day:ok]' pivot='key' type='ordinal' />
            <column-instance column='[day]' derivation='Month' name='[mn:day:ok]' pivot='key' type='ordinal' />
            <column-instance column='[weekday]' derivation='None' name='[none:weekday:nk]' pivot='key' type='nominal' />
            <column-instance column='[total_sales]' derivation='Sum' name='[sum:total_sales:qk]' pivot='key' type='quantitative' />
            <column caption='Total Sales' datatype='real' name='[total_sales]' role='measure' type='quantitative' />
            <column caption='Weekday' datatype='string' name='[weekday]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.03yzlu51hcrr3o0ztp2nq1cb4gko].[dy:day:ok]' value='32' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.03yzlu51hcrr3o0ztp2nq1cb4gko].[none:weekday:nk]' />
              <lod column='[federated.03yzlu51hcrr3o0ztp2nq1cb4gko].[attr:total_sales:qk]' />
            </encodings>
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.03yzlu51hcrr3o0ztp2nq1cb4gko].[sum:total_sales:qk]</rows>
        <cols>([federated.03yzlu51hcrr3o0ztp2nq1cb4gko].[mn:day:ok] / [federated.03yzlu51hcrr3o0ztp2nq1cb4gko].[dy:day:ok])</cols>
      </table>
    </worksheet>
    <worksheet name='sales_distribution'>
      <table>
        <view>
          <datasources>
            <datasource caption='sample 2' name='federated.1308qto18dp5dc1ad09b307x0060' />
          </datasources>
          <datasource-dependencies datasource='federated.1308qto18dp5dc1ad09b307x0060'>
            <column caption='$Date' datatype='datetime' datatype-customized='true' name='[$date]' role='dimension' type='ordinal'>
              <desc>
                <formatted-text>
                  <run>ide.dhEmi.$date</run>
                </formatted-text>
              </desc>
            </column>
            <column-instance column='[$date]' derivation='Day' name='[dy:$date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[$date]' derivation='Month' name='[mn:$date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[$date]' derivation='Quarter' name='[qr:$date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[valorTotal]' derivation='Sum' name='[sum:valorTotal:qk]' pivot='key' type='quantitative' />
            <column caption='Valor Total' datatype='real' name='[valorTotal]' role='measure' type='quantitative'>
              <desc>
                <formatted-text>
                  <run>complemento.valorTotal</run>
                </formatted-text>
              </desc>
            </column>
            <column-instance column='[$date]' derivation='Year' name='[yr:$date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.1308qto18dp5dc1ad09b307x0060].[sum:valorTotal:qk]</rows>
        <cols>([federated.1308qto18dp5dc1ad09b307x0060].[yr:$date:ok] / ([federated.1308qto18dp5dc1ad09b307x0060].[qr:$date:ok] / ([federated.1308qto18dp5dc1ad09b307x0060].[mn:$date:ok] / [federated.1308qto18dp5dc1ad09b307x0060].[dy:$date:ok])))</cols>
      </table>
    </worksheet>
    <worksheet name='weekday_distribution'>
      <table>
        <view>
          <datasources>
            <datasource caption='sample 2' name='federated.1308qto18dp5dc1ad09b307x0060' />
          </datasources>
          <datasource-dependencies datasource='federated.1308qto18dp5dc1ad09b307x0060'>
            <column aggregation='Sum' datatype='integer' name='[$Date (Dias da semana)]' role='dimension' type='ordinal' user:agg-type='Weekday' user:base-field='$date' user:ui-builder='date-bin-builder'>
              <calculation class='tableau' formula='DATEPART(&apos;weekday&apos;, [$date])' />
            </column>
            <column caption='$Date' datatype='datetime' datatype-customized='true' name='[$date]' role='dimension' type='ordinal'>
              <desc>
                <formatted-text>
                  <run>ide.dhEmi.$date</run>
                </formatted-text>
              </desc>
            </column>
            <column-instance column='[$date]' derivation='Day' name='[dy:$date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[$date]' derivation='Month' name='[mn:$date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[$Date (Dias da semana)]' derivation='None' name='[none:$Date (Dias da semana):ok]' pivot='key' type='ordinal' />
            <column-instance column='[$date]' derivation='Quarter' name='[qr:$date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[valorTotal]' derivation='Sum' name='[sum:valorTotal:qk]' pivot='key' type='quantitative' />
            <column caption='Valor Total' datatype='real' name='[valorTotal]' role='measure' type='quantitative'>
              <desc>
                <formatted-text>
                  <run>complemento.valorTotal</run>
                </formatted-text>
              </desc>
            </column>
            <column-instance column='[$date]' derivation='Year' name='[yr:$date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1308qto18dp5dc1ad09b307x0060].[none:$Date (Dias da semana):ok]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1308qto18dp5dc1ad09b307x0060].[sum:valorTotal:qk]</rows>
        <cols>([federated.1308qto18dp5dc1ad09b307x0060].[yr:$date:ok] / ([federated.1308qto18dp5dc1ad09b307x0060].[qr:$date:ok] / ([federated.1308qto18dp5dc1ad09b307x0060].[mn:$date:ok] / ([federated.1308qto18dp5dc1ad09b307x0060].[dy:$date:ok] / [federated.1308qto18dp5dc1ad09b307x0060].[none:$Date (Dias da semana):ok]))))</cols>
      </table>
    </worksheet>
    <worksheet name='weekday_distribution_average_spend'>
      <table>
        <view>
          <datasources>
            <datasource caption='sample 2' name='federated.1308qto18dp5dc1ad09b307x0060' />
          </datasources>
          <datasource-dependencies datasource='federated.1308qto18dp5dc1ad09b307x0060'>
            <column aggregation='Sum' datatype='integer' name='[$Date (Dias da semana)]' role='dimension' type='ordinal' user:agg-type='Weekday' user:base-field='$date' user:ui-builder='date-bin-builder'>
              <calculation class='tableau' formula='DATEPART(&apos;weekday&apos;, [$date])' />
            </column>
            <column caption='$Date' datatype='datetime' datatype-customized='true' name='[$date]' role='dimension' type='ordinal'>
              <desc>
                <formatted-text>
                  <run>ide.dhEmi.$date</run>
                </formatted-text>
              </desc>
            </column>
            <column caption='Ticket Médio' datatype='real' name='[Calculation_1097541337887240193]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([valorTotal])/[Calculation_1097541337889181698]' />
            </column>
            <column caption='Qtde_mesas' datatype='integer' name='[Calculation_1097541337889181698]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='COUNT([Índice do documento (gerado)])' />
            </column>
            <column-instance column='[$date]' derivation='Day' name='[dy:$date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[$date]' derivation='Month' name='[mn:$date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[$Date (Dias da semana)]' derivation='None' name='[none:$Date (Dias da semana):ok]' pivot='key' type='ordinal' />
            <column-instance column='[$date]' derivation='Quarter' name='[qr:$date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_1097541337887240193]' derivation='User' name='[usr:Calculation_1097541337887240193:qk]' pivot='key' type='quantitative' />
            <column caption='Valor Total' datatype='real' name='[valorTotal]' role='measure' type='quantitative'>
              <desc>
                <formatted-text>
                  <run>complemento.valorTotal</run>
                </formatted-text>
              </desc>
            </column>
            <column-instance column='[$date]' derivation='Year' name='[yr:$date:ok]' pivot='key' type='ordinal' />
            <column aggregation='Sum' caption='Índice Do Documento (Gerado)' datatype='integer' name='[Índice do documento (gerado)]' role='dimension' type='ordinal'>
              <desc>
                <formatted-text>
                  <run>Índice do documento (gerado)</run>
                </formatted-text>
              </desc>
            </column>
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.1308qto18dp5dc1ad09b307x0060].[none:$Date (Dias da semana):ok]' />
            </encodings>
            <reference-line axis-column='[federated.1308qto18dp5dc1ad09b307x0060].[usr:Calculation_1097541337887240193:qk]' enable-instant-analytics='true' formula='average' id='refline0' label-type='value' probability='95' scope='per-pane' value-column='[federated.1308qto18dp5dc1ad09b307x0060].[usr:Calculation_1097541337887240193:qk]' z-order='2' />
            <reference-line axis-column='[federated.1308qto18dp5dc1ad09b307x0060].[usr:Calculation_1097541337887240193:qk]' enable-instant-analytics='true' formula='max' id='refline1' label-type='automatic' paired-id='refline0' scope='per-pane' symmetric='false' value-column='[federated.1308qto18dp5dc1ad09b307x0060].[usr:Calculation_1097541337887240193:qk]' z-order='1' />
          </pane>
        </panes>
        <rows>[federated.1308qto18dp5dc1ad09b307x0060].[usr:Calculation_1097541337887240193:qk]</rows>
        <cols>([federated.1308qto18dp5dc1ad09b307x0060].[yr:$date:ok] / ([federated.1308qto18dp5dc1ad09b307x0060].[qr:$date:ok] / ([federated.1308qto18dp5dc1ad09b307x0060].[mn:$date:ok] / ([federated.1308qto18dp5dc1ad09b307x0060].[none:$Date (Dias da semana):ok] / [federated.1308qto18dp5dc1ad09b307x0060].[dy:$date:ok]))))</cols>
      </table>
    </worksheet>
  </worksheets>
  <windows source-height='51'>
    <window class='worksheet' name='main_data'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1308qto18dp5dc1ad09b307x0060].[:Measure Names]</field>
            <field>[federated.1308qto18dp5dc1ad09b307x0060].[dy:$date:ok]</field>
            <field>[federated.1308qto18dp5dc1ad09b307x0060].[mn:$date:ok]</field>
            <field>[federated.1308qto18dp5dc1ad09b307x0060].[none:$Date (Dias da semana):ok]</field>
            <field>[federated.1308qto18dp5dc1ad09b307x0060].[none:Calculation_1097541337889783813:qk]</field>
            <field>[federated.1308qto18dp5dc1ad09b307x0060].[none:dets Índice (gerado):ok]</field>
            <field>[federated.1308qto18dp5dc1ad09b307x0060].[qr:$date:ok]</field>
            <field>[federated.1308qto18dp5dc1ad09b307x0060].[yr:$date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='sales_distribution'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1308qto18dp5dc1ad09b307x0060].[dy:$date:ok]</field>
            <field>[federated.1308qto18dp5dc1ad09b307x0060].[mn:$date:ok]</field>
            <field>[federated.1308qto18dp5dc1ad09b307x0060].[none:$Date (Dias da semana):ok]</field>
            <field>[federated.1308qto18dp5dc1ad09b307x0060].[qr:$date:ok]</field>
            <field>[federated.1308qto18dp5dc1ad09b307x0060].[yr:$date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='weekday_distribution'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='170'>
            <card pane-specification-id='0' param='[federated.1308qto18dp5dc1ad09b307x0060].[none:$Date (Dias da semana):ok]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1308qto18dp5dc1ad09b307x0060].[dy:$date:ok]</field>
            <field>[federated.1308qto18dp5dc1ad09b307x0060].[mn:$date:ok]</field>
            <field>[federated.1308qto18dp5dc1ad09b307x0060].[none:$Date (Dias da semana):ok]</field>
            <field>[federated.1308qto18dp5dc1ad09b307x0060].[qr:$date:ok]</field>
            <field>[federated.1308qto18dp5dc1ad09b307x0060].[yr:$date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' maximized='true' name='weekday_distribution_average_spend'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='170'>
            <card param='[federated.1308qto18dp5dc1ad09b307x0060].[none:$Date (Dias da semana):ok]' type='highlighter' />
            <card pane-specification-id='0' param='[federated.1308qto18dp5dc1ad09b307x0060].[none:$Date (Dias da semana):ok]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1308qto18dp5dc1ad09b307x0060].[dy:$date:ok]</field>
            <field>[federated.1308qto18dp5dc1ad09b307x0060].[mn:$date:ok]</field>
            <field>[federated.1308qto18dp5dc1ad09b307x0060].[none:$Date (Dias da semana):ok]</field>
            <field>[federated.1308qto18dp5dc1ad09b307x0060].[qr:$date:ok]</field>
            <field>[federated.1308qto18dp5dc1ad09b307x0060].[yr:$date:ok]</field>
          </color-one-way>
        </highlight>
        <floating-toolbar-visibility value='1' />
      </viewpoint>
    </window>
    <window class='worksheet' name='real_sales + forecast'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='170'>
            <card pane-specification-id='0' param='[federated.03yzlu51hcrr3o0ztp2nq1cb4gko].[none:type:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.03yzlu51hcrr3o0ztp2nq1cb4gko].[none:day:ok]</field>
            <field>[federated.03yzlu51hcrr3o0ztp2nq1cb4gko].[none:day:qk]</field>
            <field>[federated.03yzlu51hcrr3o0ztp2nq1cb4gko].[none:month:nk]</field>
            <field>[federated.03yzlu51hcrr3o0ztp2nq1cb4gko].[none:type:nk]</field>
            <field>[federated.03yzlu51hcrr3o0ztp2nq1cb4gko].[none:weekday:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='real_sales + forecast 2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='170'>
            <card pane-specification-id='0' param='[federated.03yzlu51hcrr3o0ztp2nq1cb4gko].[none:weekday:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.03yzlu51hcrr3o0ztp2nq1cb4gko].[none:day:ok]</field>
            <field>[federated.03yzlu51hcrr3o0ztp2nq1cb4gko].[none:day:qk]</field>
            <field>[federated.03yzlu51hcrr3o0ztp2nq1cb4gko].[none:month:nk]</field>
            <field>[federated.03yzlu51hcrr3o0ztp2nq1cb4gko].[none:weekday:nk]</field>
            <field>[federated.03yzlu51hcrr3o0ztp2nq1cb4gko].[yr:day:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Planilha 7'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1308qto18dp5dc1ad09b307x0060].[io:terça-feira:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Planilha 7' width='176'>
      iVBORw0KGgoAAAANSUhEUgAAALAAAADACAYAAACklemfAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAUbUlEQVR4nO3de3xT9f3H8Vd+v0Ca9LamVMqgIEL3E1Dm0pb5cNMqcptFV/xZpk7bTVBa
      dVgqTGSCYhlURSlscplFJzB1FAW8cNGi1Ak6KlQnLVKgPErFgqWpbdokJfFxfn8kvaUF6g+h
      +Taf5+PBg+Z7bt/vyTvffM9Jco5O0zQNIRT1X91dASHOhwRYKE0CLJQmARZKkwALpUmAhdIk
      wEJpEmChNAmwUJoEWChNAiyUJgFWgbuB2gZnd9fCL0mAFVC0OJExS/b5lDopLypky6YtlJ1y
      X/hKuGspKiykvPYibOt7CMAAN7AuPY74+Hji4+OJi5vEnKWbqDrvDs7JZ5vWUVBy6oeoZBuV
      vJoP9/9mZLvSwpybmZzxMHOzl7Dn5EXonZ2HmZOVxVuHbV1exF1VRP6mIi5k7QIwwIAdtIjb
      eHbZs8y+dxjvrl3AxJuXUnWeq937/BIeKfjqB6lis4aSdylkPON+EtKmtJLt+VbG5bzF3r3v
      cdeIkDMu/4MJMtEPMPT6HstYd5OTvfdC1QgI0AA32WDg7TeTeE0iKekL2ZmXia52LX/ZUumZ
      wVnO6qxJ3h46lXVF3l7VWUZOejpL160jJ30s8fHxpOdsoZYGtmRn8poVWDOL9Kx00rM30eAs
      Iyc1nS3lp/gsP5tJqTmUOQFnJeuyU1veAZZuKjljXfe+sRxz6iRimgucZeSk3sO7Oh0H1swn
      PTWd/LIGwM1nm3IYG+d5d0nNXkeVG7Zkp7NydxW1ZVtIn5RKflkD7toSVmdnMWlsHHFxY0nP
      yaeyk27SfaqIpVmpjB07ltQHn6JUp2uZVluyhfSxnm2NTV9KSUP7Zcs25ZDy2NvA62Smp5Oa
      vtTTdtwUrctueQfMWlno7aEbOq0rnGLL0jmMjYsjLm4SKwsr221H36VnvCdyuVr+DLkqmYyY
      Jbx2rAaIIj8zheVFiTy1egEN2x4jO/1eLivYyDW97JQWFVH66aeMm5pJxqXvsmLDPD7+7U6i
      Lu9Pre5TzPHXkTAiCldYf/RuO6UlReQ/fAe6ylq0iHG4cLJlTjJLCs3cn/0skYdeZcGCNLhk
      Gw9d06d9Hd1lvLoJ7su/srUsKIqRw0PYUFpL39hhXBVm4BKjnlOFi5m6YAPxqXO5I/YEC+Yu
      YaLDzP0Hinhh33xeP1aEFTM3As6vP2H5hzDjgacwu0pYkpPDnwb8lDV3/aTNtsuZNz6d7Qwk
      5f40oqr3Ufqpd1pDEfekzqVh/AzyfhvD+tQsUmf+mF0rUwjyzmK85HJ+PqyUY8dgWEICNISh
      B6oKFpGRu5nbHlvBhJDdTJ39ME8OfYuFY0Kp2udb1+8oyL6DeZtr+fX9s7mSYj48XAOJMa31
      1AKOTctLtmjJK4rblFVriywWzfLoO5pmK9aSLRZtxX6Hd9oxbYbFouUWWzXNUazdbbFoK4pt
      nkmu/Vpy8zTNpa1NtmjJeftbV+so1qZZLJrFMkbbuL/au3nP+hftsnpncmkbZ1g0y91rNYfW
      nrU4V7NYFmnVHdpwULvbYtHyWupo09YmWzTLo++1LrsrV7NYkrW1d1u0uLg4bVreng7rd1it
      mtV6TMu723d/aJpjf54WFxenbTziammrp+1W7ev3ntQslhnaseYW7M/TLJZkrXm3NHMdXKFZ
      LHlttuvZ95ZFu1pK9uSO0SzJazWbZutYV+/+nrHxSIc90Cxwe+B2gogaCOaBPwY9hAJ5ab8k
      r3myTkfMJxU8dDl4DmG8vbfb878BACdN0K5nB7ADKc+9SvIIb+/q3eMjY0JpLhhuGQGvN9H+
      +N7N3jVrGHjvGnz6ZXDasQEulwO8fV4TMHBIv5ZZepk8tWqygfbrHP46JaHl7dZZvoX7Uua2
      GRLoGH5N+01UV5SgRUwl8TJ9S1ubD99OHj6ETlfKpPj4NktE0L7l4LQDZle7dhlCQbdhOvEb
      2hRqNbjOUFcbcHvcQN890CJwA9yr9Wik4bNNrKjUMW5gJLhrsAHjHssjIy4MhwP0egi7ZCCw
      vysrbvfIBvwoPKi1wPtsHqt307z7T31VBT5jSJwHWVMIaTP+p2vtaYCGBnvLQ32b9g2M6tPm
      iXby1hNzKUmcS8FzyUQAZasn8YDP9kOiBoF1N1+704nQA/peNL/kTJF90LThPPXqn7kMB269
      Hj29uCSo/TroBVirsQHNh5lNNtDiM8h/fBxumwO9Xk8vYwQRndXVu6/+U2njppgIOhOQB3EA
      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
      MoQwAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='main_data' width='192'>
      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
      t1OQAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='real_sales + forecast' width='192'>
      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
      TjLm4/8H3fF+OohG2VcAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='real_sales + forecast 2' width='192'>
      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
      emhqBv8PB6dAAoSGHjUAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='sales_distribution' width='192'>
      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
      RpIAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='weekday_distribution' width='192'>
      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
      DI4R7y3ybGKRaFeCcjGPiftNGYCrjTRubBobVJrhS1EUVxti3PhqlHszfL3q8dnxdSoB6NUS
      0wtr3LpzG6NWR7EqaJU6oYDnIGinSJLk2M6Nzcu2r5Ovhk0zfbmxeVV8nUoAHV09vNXVc5qP
      EAguFJEFErQ0QgCClkYIQNDSCAEIWhohAEFLIwQgaGmEAAQtjRCAoKURAhC0NKcSgGnopFIp
      DMOgVtPRa1UMs3knGgsEp+VUSyHmJ8Yp1mF9Zw+zVKVcyfCVt99BkcUuLMHl4FQtQFEzuHv/
      NqZWYWVuCn+0H58qelWCy8Op3tZ4NMh7P/k5gWgHY/ceIpV3yJf1s4pNIDh3TtUFGrx+l76r
      t1HUxnrr62cQkkDQPE55KoT00su/T+Mup3q9TjqdPtTKsqwj12gXi4dvpHZjc5zd/sC9dugu
      o7P2VavVAKhUKufuq1KpUKlUDt0Ecta+3NhUq1VkWcbj+eJFeGcdX7lcRtd1ZPmLHZ2GzZkf
      iyJJEqqqoqoqnZ2H3/d0Em7snNrouo6maUQikXP3pWkalmURDAbP3VehUMDv9x/6gp21Lzc2
      pVIJVVXxuThuxakvRVEIhULH7ghr+ojVsiwymQyZjLMTAzRNI5VKHdSmdjBNk3Q6TS5n/2hE
      y7IolUqkUil03f54xjAM1tbW0DTNka9isUgqlXK037Ver7O3t3dsrXiYr3w+z97enqPbFnVd
      Z29vz1V8hULBUXzpdJpkMunoQrx6vU4qlaJUKjnylcvl2Nvba/7BWBsbG2xsbBAIBIhGo7bt
      ZmZmqNfrdHd3MzQ0ZMtmdXWVZDKJ3+/n3r17tmwsy2J2dpZ6vU5/fz99ffZOe15eXiaRSLC8
      vMytW7ds2VSrVWZmZg7+3dXVZctuYWGBcrmM3++37atQKDAzM4Oqqng8Htst39zcHMFgkHq9
      TiKRsGWztLR00BLdvn3blk25XCaXy+Hz+chkMrZr+7m5OarVKj6fz3ZZZLNZ5ubm8Hg8zRdA
      e3s7Pp+Pvb09R3aDg4Ok02lCoZBtm2g0SiAQIJ/P27aRJImhoSGSyaRtX5ZlEYvFWF9fd9Sl
      UlWVK1eukEwmCQQCtu26urqo1WqOWkO/38/IyAjJZNJR9yORSFAqlWhra7NtE4vFCIfDh455
      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
    </thumbnail>
    <thumbnail height='192' name='weekday_distribution_average_spend' width='192'>
      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
      iWks7AcGkCQwdAPDBEWRD/0U6J0QQKVSwW6374ut7aDrOgCKcjDnC6ZpUq1WD/QY7tU5fiem
      QLncwd6gUalUKJfLb9uNDZEk6cCP4V75d8AEYJCaWfvGUa/kef5iaDmt31x6Ft3Y3k3LMHS0
      xavxZpimyejICzLzi6n4TI3UXGZbdncLrVpdZ6nS4MWzZ5S0hc+Vz2UoVvYnckcrZMkUqiv/
      1173T68W6esbXD5n2fQs2jbP304wDX1Nqsgl9m4VyDR48vA+9roIlGaZ12x0NHgYHInS3taG
      O9BItZBhZmqUbNnOpTOdPHj6FFX1E305iD3QxMljR3h65xYpWwSj9z6a6qMh4KJULRKNTuP3
      2JnNVejsbLfk0uTwU56OZLlw9ggjLyc5fqKLkeEokbCf+EyWtiY/0fgcH/7oMmYxy80fHvCT
      Hzt50hvl5HtnyWfnGR8cpi4cIjUdo6njOB3NoV0ZrnJ+jgePntHU0YnTZkM2TTBLDI9McfJ4
      J/2j42RSaZq6enBTYr4kc/HCabIzY9x/+hJZlUhlSnS2N+O0VXg2OkogGGJ6Osl7Fy7ic+1s
      +mAaOg/v3QWXn+awn3qnQs6AQinP44ejBOojxIaf0HHqfbTMDLInxOmT3fQ/uke05MSoPKQs
      uWgJeShoJSbG4wR8TtKZIhcvXcS+S0/UA88fU8JFnV0jPluiKejDYbeTio8xOq9yrjPC1PQc
      Fy9dxChn9i41YrGQYyoWQ1YUXo5PUCnmyFZ0LpzpZmzoJZozxFwsSlW14UFmMpnk/cuXmJ2K
      kStXmEnOUZxN4vP6ae1p4f69p4COgsl8bo5Qcw/F2Tix+BR1wWaCfu/mTpkGDk+Y6PgLZFUi
      O5fE8LSQTyX44MNLTMWipCaGyCtucrkK9XVu5udmkOwq+VyWYrZKIlPhVGeIyZlZUqkUXUc2
      F5+mLVyRbTbbhm0GHj+m4/RZUtMxsvkSpdl5DEkjl4qSnCvibOgkoMqcOHOCqZcjvIwlcKsm
      umLD5QgRnxpAq5SoaDJOqULWdFJn00lOTaK76okE3jw+xWIRl8u14e/LcxMkqyHkUoZ8MUed
      VCJZNZhLZ7AHjmDOpwmEAhztPsLL8UmmZ2YxyrMoqpfWziYePXqOZFaRJcgX5/EE29HzSRKJ
      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
      2VweVZX5/655K6kZAQs/AAAAAElFTkSuQmCC
    </thumbnail>
  </thumbnails>
</workbook>
